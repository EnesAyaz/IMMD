% Datasheet

fpc_300v = [
2.2 11.0 19.0 31.5 5.0 18.1 16.0 0.7 4.1 1280 25 27.5 2.25
3.3 12.5 21.5 31.5 7.0 12.2 19.0 0.7 4.1 1120 30 27.5 2.74
4.7 14.0 24.5 31.5 8.5 8.9 21.0 0.7 4.2 1040 35 27.5 3.13
5.0 15.0 24.5 31.5 9.0 8.4 21.0 0.7 4.2 960 36 27.5 3.29
6.8 18.0 27.5 31.5 11.5 6.3 24.0 0.7 4.4 800 44 27.5 3.82
8.0 16.0 32.0 31.5 12.5 5.6 27.0 0.7 4.5 880 45 27.5 4.32
8.2 18.0 33.0 31.5 13.0 5.5 27.0 0.7 4.5 800 48 27.5 4.47
10.0 21.0 31.0 31.5 14.5 4.6 27.0 0.8 4.6 720 51 27.5 4.76
12.0 22.0 36.5 31.5 17.0 4.0 31.0 0.8 4.9 640 58 27.5 5.33
15.0 20.0 39.5 42.0 16.0 5.4 10.0 1.1 8.3 640 72 37.5 5.78
20.0 28.0 37.0 42.0 20.0 4.0 11.0 1.1 8.4 440 83 37.5 7.6
20.0 43.0 22.0 41.5 19.5 4.0 13.0 1.1 8.3 280 80 37.5 7.6
22.0 28.0 42.5 42.0 21.5 3.8 11.0 1.2 8.5 440 90 37.5 7.63
25.0 28.0 42.5 42.0 22.5 3.4 12.0 1.2 8.6 440 90 37.5 7.85
30.0 30.0 45.0 42.0 26.0 2.8 12.0 1.2 8.7 400 100 37.5 9.07
35.0 33.0 48.0 42.0 29.5 2.5 13.0 1.2 8.8 180 110 37.5 9.97
40.0 30.0 45.0 57.5 28.0 3.0 12.0 1.5 12.3 280 125 52.5 10.68
47.0 35.0 50.0 57.5 33.0 2.6 13.0 1.5 12.5 108 145 52.5 11.72
60.0 35.0 50.0 57.5 37.0 2.1 15.0 1.6 12.9 108 145 52.5 12.70
80.0 45.0 57.0 57.5 47.0 1.6 18.0 1.6 13.5 140 185 52.5 14.15
80.0 130.0 24.0 57.5 51.0 1.4 4.0 1.5 11.7 80 200 52.5 14.15
100.0 60.0 45.0 57.5 48.0 1.4 19.0 1.6 13.5 200 192 52.5 15.51
];

% 1 dummy capacitor is added
fpc_450v = [
1.5 11.0 19.0 31.5 4.5 22.1 16.0 0.6 3.3 1280 25 27.5 1.78
2.2 12.5 21.5 31.5 6.0 14.9 19.0 0.6 3.3 1120 30 27.5 1.81
3.3 15.0 24.5 31.5 8.0 10.3 22.0 0.6 3.4 960 36 27.5 3.14
4.7 18.0 27.5 31.5 10.5 7.5 24.0 0.6 3.5 800 44 27.5 3.75
5.0 16.0 32.0 31.5 11.0 7.1 28.0 0.7 3.6 880 45 27.5 4.38
5.6 18.0 33.0 31.5 12.0 6.3 29.0 0.7 3.6 800 48 27.5 4.42
6.0 21.0 31.0 31.5 13.0 5.9 28.0 0.7 3.6 720 51 27.5 4.32
6.8 22.0 36.5 31.5 14.5 5.4 29.0 0.7 3.7 640 58 27.5 4.54
7.5 22.0 36.5 31.5 15.0 5.0 32.0 0.7 3.8 640 58 27.5 4.85
8.2 20.0 39.5 42.0 13.5 7.8 9.0 1.0 6.7 640 72 37.5 5.14
10.0 20.0 39.5 42.0 14.5 6.4 11.0 1.0 6.7 640 72 37.5 6.50
13.0 43.0 22.0 41.5 17.5 5.0 13.0 1.0 6.6 280 80 37.5 8.01
15.0 28.0 42.5 42.0 20.0 4.4 11.0 1.0 6.8 440 90 37.5 9.40
20.0 30.0 45.0 42.0 24.0 3.3 13.0 1.0 6.9 400 100 37.5 10.09
25.0 33.0 48.0 42.0 28.0 2.8 14.0 1.0 7.1 180 110 37.5 12.03
30.0 35.0 50.0 57.5 28.0 3.2 14.0 1.3 9.9 108 145 52.5 13.65
35.0 35.0 50.0 57.5 31.5 2.8 14.0 1.3 10.0 108 145 52.5 14.53
40.0 35.0 50.0 57.5 34.0 2.5 15.0 1.3 10.2 108 145 52.5 15.05
60.0 45.0 57.0 57.5 45.0 1.8 18.0 1.4 11.2 140 185 52.5 17.28
60.0 130.0 24.0 57.5 49.5 1.6 4.0 1.2 9.5 80 200 52.5 18.15
65.0 60.0 45.0 57.5 48.0 1.6 19.0 1.3 10.6 200 192 52.5 19.01
180.0 130.0 58.0 57.5 97.5 0.6 6.0 1.4 11.2 40 300 52.5 45.60
];


%%
figure;
plot(fpc_300v(:,1),fpc_300v(:,2),'bo-','Linewidth',1.5);
hold on;
plot(fpc_450v(:,1),fpc_450v(:,2),'ro-','Linewidth',1.5);
hold off;
grid on;
set(gca,'FontSize',12);
xlabel('Capacitance (uF)','FontSize',12,'FontWeight','Bold')
ylabel('Temperature (C)','FontSize',12,'FontWeight','Bold')
legend('450V series','300V series')
print(fig,'temperature','-dpng')


%% First algorithm
freq1 = 10e3:10e3:100e3;
numfreq = numel(freq1);
M = 0.1:0.01:1;
numM = numel(M);
Icrms = zeros(numfreq,numM);
Cap = zeros(numfreq,numM);
Cap_max = zeros(1,numfreq);
Icrms_max = zeros(1,numfreq);
for k = 1:numfreq
    % Inputs
    cosphi = 0.9;
    Vdc = 400; % V
    module = 4;
    phase_dif = 90; % degrees
    efficiency = 0.99; % THIS VALUE WILL DEPEND ON FREQUENCY !!!
    Tambient = 40; % C
    
    % Operational parameters
    Pout1 = M*2e3; % W
    Sout1 = Pout1/(cosphi); % VA
    Vll_rms = Vdc*0.612*M; % V
    Iarms = Sout1./(Vll_rms*sqrt(3)); % A
    Iapeak = Iarms*sqrt(2); % A
    
    % Select switching frequency
    fsw = k*10e3; % Hz
    
    % Constraints
    perc_ripple_c = 1; % percent
    volt_ripple_c = perc_ripple_c*0.01*Vdc; % V
    temp_max = 45; % C
    power_density_min = 10; % W/cm^3
    height_max = 40; % mm
    weight_max = 30; % g
    
    % Block 1 - RMS current
    interleaving_factor = 0.132*M+0.209;
    Icrms(k,:) = interleaving_factor*module.*Iarms.*sqrt(2*M.*(sqrt(3)/(4*pi) + cosphi^2*(sqrt(3)/pi-9*M/16)));
    Idc = module*(3/(2*sqrt(2))).*M.*Iarms*cosphi/efficiency;
    %Icrms_perc = 100*Icrms./Idc; % USE LATER
    
    % Block 2 - Required capacitance
    Icharge_pos = Idc;
    Icharge_neg = Iapeak*module - Idc;
    Cap(k,:) = 0.7*Icharge_neg.*M/(volt_ripple_c*fsw); % F
    % volt_ripple1 = M*Icharge_neg/(Cdc*fsw);
    % volt_ripple2 = 0.3*Icharge_pos*M/(Cdc*fsw);
    % volt_ripple_c = max(volt_ripple1,volt_ripple2);
    % volt_ripple_perc = volt_ripple/Vdc*100;
    Cap_max(k) = max(Cap(k,:));
    Icrms_max(k) = max(Icrms(k,:));
end


%% CAPACITOR SELECTION
required_capacitance = Cap_max(4)*1e6; % uF
required_rmscurrent = Icrms_max(4); % A

cap_select = 1:numel(fpc_300v(:,1));
parallel_450 = zeros(1,numel(cap_select));
parallel_300 = zeros(1,numel(cap_select));
available_450 = ones(4,numel(cap_select));
available_300 = ones(4,numel(cap_select));
rms_current_450 = zeros(1,numel(cap_select));
rms_current_300 = zeros(1,numel(cap_select));

for m = 1:numel(cap_select)
    parallel_450(1,m) = ceil(required_capacitance/fpc_450v(m,1));
    rms_current_450(1,m) = parallel_450(1,m)*fpc_450v(m,5);
    parallel_300(1,m) = ceil(required_capacitance/(fpc_300v(m,1)/2));
    rms_current_300(1,m) = parallel_450(1,m)*fpc_300v(m,5)';
    if rms_current_450(1,m) < required_rmscurrent
        available_450(1,m) = 0;
    end
    if rms_current_300(1,m) < required_rmscurrent
        available_300(1,m) = 0;
    end
end


height_450 = fpc_450v(:,3); % mm
width_450 = fpc_450v(:,2); % mm
length_450 = fpc_450v(:,4); % mm
volume_450 = 1e-3*length_450.*width_450.*height_450.*parallel_450(1,:)'; % cm^3
power_density_450 = 2000./volume_450; % W/cm^3
height_300 = fpc_300v(:,3); % mm
width_300 = fpc_300v(:,2); % mm
length_300 = fpc_300v(:,4); % mm
volume_300 = 2*1e-3*length_300.*width_300.*height_300.*parallel_300(1,:)'; % cm^3
power_density_300 = 2000./volume_300; % W/cm^3

for m = 1:numel(cap_select)
    if power_density_450(m) < power_density_min
        available_450(2,m) = 0;
    end
    if power_density_300(m) < power_density_min
        available_300(2,m) = 0;
    end
    if height_450(m) > height_max
        available_450(3,m) = 0;
    end
    if height_300(m) > height_max
        available_300(3,m) = 0;
    end
end


% There is no dependency for ESR on frequency after 10 kHz.
% There is no dependency for Iacrms on frequency after 10 kHz
% There is no dependency for Iacrms on temperature before 70C ambient
% temperature

ESR_450 = fpc_450v(:,6)*1e-3./parallel_450(1,:)'; % Ohm
ESR_300 = 2*fpc_300v(:,6)*1e-3./parallel_300(1,:)'; % Ohm
thermal_res_300 = fpc_300v(:,11); % mW/C
thermal_res_450 = fpc_450v(:,11); % mW/C
Ploss_450 = required_rmscurrent^2.*ESR_450; % W
Tcore_450 = thermal_res_450.*Ploss_450./parallel_450'+Tambient; % C
Ploss_300 = required_rmscurrent^2.*ESR_300; % W
Tcore_300 = thermal_res_300.*Ploss_300./(2*parallel_300')+Tambient; % C

for m = 1:numel(cap_select)
    if Tcore_450(m) > temp_max
        available_450(4,m) = 0;
    end
    if Tcore_300(m) > temp_max
        available_300(4,m) = 0;
    end
end

capacitance_300v = fpc_300v(:,1);
capacitance_450v = fpc_300v(:,1);

cost_300 = 2*parallel_300'.*fpc_300v(:,13);
cost_450 = 1*parallel_450'.*fpc_450v(:,13);

%%
% Final Evaluation

performances = [
4.58	106.9	27.5	0.2
4.87	95.2	31	0.4
5.10	76.0	22	2.0
4.29	64.1	45	6.4
3.39	56.6	57	11.3
11.52	47.1	25	0.3
12.40	43.4	32	0.5
11.30	34.0	37	0.9
12.74	32.1	22	3.8
11.76	30.3	45	5.6
9.94	29.1	50	15.5
11.15	18.2	24	48.9
]

weight_pd = 0.3;
weight_h = 0.2;
weight_t = 0.2;
weight_c = 0.3;
overall_300 = weight_pd*power_density_300/10 + weight_h./(height_300/40) + weight_t./(Tcore_300/45) + weight_c./(cost_300/75);
overall_450 = weight_pd*power_density_450/10 + weight_h./(height_450/40) + weight_t./(Tcore_450/45) + weight_c./(cost_300/75);


%%
% Algorithm Results

% Power density
% num = numel(cap_select);
% power_density_limit = power_density_min*ones(1,num);
fig = figure;
plot(capacitance_450v,power_density_450,'ro-','Linewidth',1.5);
hold on;
plot(capacitance_300v,power_density_300,'bo-','Linewidth',1.5);
% hold on;
% plot(capacitance_450v,power_density_limit,'ko-','Linewidth',1.5);
hold off;
grid on;
set(gca,'FontSize',12);
xlabel('Capacitance (uF)','FontSize',12,'FontWeight','Bold')
ylabel('Power Density (W/cm^3)','FontSize',12,'FontWeight','Bold')
legend('450V series','300V series')
print(fig,'powerdensity','-dpng')

%%

% Temperature
% temperature_limit = temp_max*ones(1,num);
fig = figure;
plot(capacitance_450v,Tcore_450,'bo-','Linewidth',1.5);
hold on;
plot(capacitance_300v,Tcore_300,'ro-','Linewidth',1.5);
% hold on;
% plot(cap_select,temperature_limit,'ko-','Linewidth',1.5);
hold off;
grid on;
set(gca,'FontSize',12);
xlabel('Capacitance (uF)','FontSize',12,'FontWeight','Bold')
ylabel('Temperature (C)','FontSize',12,'FontWeight','Bold')
legend('450V series','300V series')
print(fig,'temperature','-dpng')


%%
% Height
height_limit = height_max*ones(1,num);
fig = figure;
plot(cap_select,height_450,'bo-','Linewidth',1.5);
hold on;
plot(cap_select,height_300,'ro-','Linewidth',1.5);
hold on;
plot(cap_select,height_limit,'ko-','Linewidth',1.5);
hold off;
grid on;
set(gca,'FontSize',12);
xlabel('Capacitor No','FontSize',12,'FontWeight','Bold')
ylabel('Height (mm)','FontSize',12,'FontWeight','Bold')
legend('450V series','300V series','Limit')
print(fig,'height','-dpng')

